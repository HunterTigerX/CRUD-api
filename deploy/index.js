(()=>{"use strict";var e={767:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.requestListener=void 0;const n=s(488),i=s(748),r=process.argv.slice(2,3).toString().split("=")[1],o=Number("single"===r?"3000":"4000"),a=JSON.stringify({message:"Invalid userId (not in uuid format)"}),d=JSON.stringify({message:"Invalid data in request. Probably you are missing required fields or using invalid data type for object key's value or have extra fields"}),l=JSON.stringify({message:"Your body might contain errors and cannot be converted to JSON"}),p=JSON.stringify({message:"Request body does not contain required fields or have extra fields"}),u=JSON.stringify({message:"Your url does not contain user ID, so user id is invalid"}),c=JSON.stringify({message:"User with this ID was not found"}),f=JSON.stringify({message:"Resource that you requested doesn't exist"}),y=JSON.stringify({message:"Your body is missing required fields"}),g=JSON.stringify({message:"Resource that you requested doesn't exist or you are posting to a wrong path. You should post to localhost:3000/api/users/"}),w=JSON.stringify({message:"Resource that you requested doesn't exist or you are posting to a wrong path. You should post to 'localhost:3000/api/users/id' where id is UUID"});t.requestListener=async function(e,t){let s="";async function r(e){try{return JSON.parse(e),Promise.resolve(JSON.parse(e))}catch(e){return Promise.resolve("Invalid body")}}async function h(e){const t=["username","age","hobbies"],s=Object.keys(e);return Promise.resolve(s.length===t.length&&s.every((e=>t.includes(e))))}async function H(e){let t=e.username,s=e.age,n=e.hobbies;"string"==typeof s&&(s=s.trim()),"string"==typeof t&&(t=t.trim());let i="string"==typeof t&&0!==t.length,r=!isNaN(Number(s))&&null!==s&&0!==s.toString.length,o=Array.isArray(n)&&(n.every((e=>"string"==typeof e))||0===n.length);return Promise.resolve(i&&r&&o)}await new Promise(((t,n)=>{e.on("data",(e=>{s+=e})),e.on("end",(()=>{t("success")}))}));const x=e.method,m=new URL(`http://localhost:${o}${e.url}`).pathname.split("/").filter(Boolean);let v=m.length>=3?m[2]:void 0,b="api"===m[0]&&"users"===m[1];const U=2===m.length;if(m.length>3)t.setHeader("Content-Type","application/json"),t.writeHead(404),t.end(f);else if("GET"===x)if(b&&U)t.setHeader("Content-Type","application/json"),t.writeHead(200),t.end(JSON.stringify(i.newDb.getUsers()));else if(b&&v)if(await(0,n.isUUID)(v)){const e=i.newDb.getUsers().find((e=>e.id===v));e?(t.setHeader("Content-Type","application/json"),t.writeHead(200),t.end(JSON.stringify(e))):(t.setHeader("Content-Type","application/json"),t.writeHead(404),t.end(c))}else t.setHeader("Content-Type","application/json"),t.writeHead(400),t.end(a);else t.setHeader("Content-Type","application/json"),t.writeHead(404),t.end(f);else if("POST"===x)if(b&&U){const e=await r(s);if("Invalid body"===e)t.setHeader("Content-Type","application/json"),t.writeHead(500),t.end(l);else if(await h(e))if(!1===await H(e))t.setHeader("Content-Type","application/json"),t.writeHead(400),t.end(d);else{let s=await(0,n.generateUUID)();const r=i.newDb.getUsers().find((e=>e.id===v));for(;r;)s=await(0,n.generateUUID)();e.age=Number(e.age);const o=Object.assign(s,e);i.newDb.addNewUser(o),t.setHeader("Content-Type","application/json"),t.writeHead(201),t.end(JSON.stringify(o))}else t.setHeader("Content-Type","application/json"),t.writeHead(400),t.end(y)}else t.setHeader("Content-Type","application/json"),t.writeHead(404),t.end(g);else if("PUT"===x)if(b&&U)t.setHeader("Content-Type","application/json"),t.writeHead(400),t.end(u);else if(b&&v)if(await(0,n.isUUID)(v)){const e=i.newDb.getUsers().find((e=>e.id===v));if(e){const n=await r(s);if("Invalid body"===n)t.setHeader("Content-Type","application/json"),t.writeHead(500),t.end(l);else if(await h(n))if(!1===await H(n))t.setHeader("Content-Type","application/json"),t.writeHead(400),t.end(d);else{const s={id:e.id},r=Object.assign(s,n);i.newDb.modifyUser(v,r),t.setHeader("Content-Type","application/json"),t.writeHead(200),t.end(JSON.stringify(r))}else t.setHeader("Content-Type","application/json"),t.writeHead(400),t.end(p)}else t.setHeader("Content-Type","application/json"),t.writeHead(404),t.end(c)}else t.setHeader("Content-Type","application/json"),t.writeHead(400),t.end(a);else t.setHeader("Content-Type","application/json"),t.writeHead(404),t.end(g);else"DELETE"===x?b&&U?(t.setHeader("Content-Type","application/json"),t.writeHead(400),t.end(u)):b&&v?await(0,n.isUUID)(v)?i.newDb.getUsers().find((e=>e.id===v))?(i.newDb.deleteUser(v),t.setHeader("Content-Type","application/json"),t.writeHead(204),t.end()):(t.setHeader("Content-Type","application/json"),t.writeHead(404),t.end(c)):(t.setHeader("Content-Type","application/json"),t.writeHead(400),t.end(a)):(t.setHeader("Content-Type","application/json"),t.writeHead(404),t.end(w)):(t.setHeader("Content-Type","application/json"),t.writeHead(404),t.end(f))}},16:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{_users=[];constructor(){this._users=[]}addNewUser(e){this._users.push(e)}getUsers(){return this._users}modifyUser(e,t){this._users.map(((s,n)=>{s.id===e&&(this._users[n]=t)}))}deleteUser(e){this._users.map(((t,s)=>{t.id===e&&this._users.splice(s,1)}))}}},748:function(e,t,s){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.newDb=void 0;const i=n(s(136)),r=n(s(840)),o=n(s(558)),a=n(s(16)),d=s(767),l=process.argv.slice(2,3).toString().split("=")[1],p=Number("single"===l?"3000":"4000"),u="localhost",c=o.default.availableParallelism();let f=0;const y=[];if(t.newDb=new a.default,r.default.isPrimary&&4e3===p){for(let w=0;w<c;w+=1){const h=r.default.fork();h.on("online",(()=>{y.push(h)})),h.on("exit",((e,t,s)=>{const n=y.indexOf(e);-1!==n&&y.splice(n,1)}))}const g=i.default.createServer(d.requestListener);g.on("request",((e,t)=>{const s=new URL(`http://${u}:${p}${e.url}`).pathname,n=y[f];f=(f+1)%y.length;const r={hostname:"localhost",port:p+n.id-1,path:s,method:e.method,headers:e.headers},o=i.default.request(r,(e=>{e.pipe(t)}));e.pipe(o)})),g.listen(p,(()=>{console.log(`Server is running on http://${u}:${p} and worker ${process.pid} is working`)}))}else{const H=i.default.createServer(d.requestListener);if(4e3===p){if(process.on("message",(e=>{"request"===e.type&&e.req.pipe(e.res)})),process&&"function"==typeof process.send){process.send({type:"ready"});const x=r.default.worker;x&&1!==x.id&&H.listen(p+x.id-1,(()=>{console.log(`Server is running on http://${u}:${p+x.id-1} and worker ${process.pid} is working`)})),process.send({type:"ready"});const m=[];function v(){const e=m[f];f=(f+1)%m.length,e.send("request")}r.default.on("message",((e,t)=>{"ready"===e.type&&(m.push(t),m.length===c-1&&v())}))}}else H.listen(p,u,(()=>{console.log(`Server is running on http://${u}:${p}`)}))}},488:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isUUID=t.generateUUID=void 0,t.generateUUID=async function(){const e={id:"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){let t=16*Math.random()|0;return("x"==e?t:3&t|8).toString(16)}))};return Promise.resolve(e)},t.isUUID=async function(e){return Promise.resolve(/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$/.test(e))}},840:e=>{e.exports=require("cluster")},136:e=>{e.exports=require("http")},558:e=>{e.exports=require("os")}},t={};!function s(n){var i=t[n];if(void 0!==i)return i.exports;var r=t[n]={exports:{}};return e[n].call(r.exports,r,r.exports,s),r.exports}(748)})();